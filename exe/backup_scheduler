#!/usr/bin/env ruby
require 'daemons'
require 'rufus-scheduler'
require_relative '../lib/data_dog'
require_relative '../lib/mongo_cluster'
require_relative '../lib/mongo_cluster/backup'

Daemons.run_proc('backup_scheduler', dir_mode: :system, monitor: true, log_output: true, log_dir: MongoCluster::Backup.log_path) do
  scheduler = Rufus::Scheduler.new

  scheduler.interval MongoCluster::Backup::Policy.snapshot_interval.minutes.to_i do
    DataDog.event_exception do
      MongoCluster::Backup.member_sync!
      MongoCluster::Backup.data_volume
      DataDog.statsd.histogram('backup.snapshots', MongoCluster::Backup.snapshots_count)
    end
  end

  # Every day at midnight
  scheduler.cron '0 0 * * *', overlap: false do
    DataDog.event_exception do
      MongoCluster::Backup.apply_retention_policy
      DataDog.statsd.histogram('backup.snapshots', MongoCluster::Backup.snapshots_count)
    end
  end

  # Every day at midnight
  scheduler.cron '0 0 * * *', overlap: false do
    DataDog.event_exception do
      DataDog.statsd.time('backup.dumps') do
        MongoCluster.dump_to_s3
      end
    end
  end

  #Every Tuesday at 23:00
  scheduler.cron '0 23 * * 4', overlap: false do
    DataDog.event_exception do
      DataDog.statsd.histogram('efs.size', Aws::Efs.path.size)
      Aws::Efs.clear
    end
  end

  scheduler.join
end